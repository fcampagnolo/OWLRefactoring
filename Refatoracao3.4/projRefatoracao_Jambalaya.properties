#--- Jambalaya, projRefatoracao Project Properties ---
#Tue Oct 11 11:57:48 BRT 2016
DataDisplayBridge\:\:relTypeGroups=<?xml version\="1.0" encoding\="UTF-8"?><Groups><Group compositeColor\="-16776961" compositeEnabled\="false" name\="Property Restrictions On Classes"><Type name\="createBy (Necessary and Sufficient)"/><Type name\="createBy (Necessary)"/><Type name\="hasAdvantage (Necessary and Sufficient)"/><Type name\="hasAdvantage (Necessary)"/><Type name\="hasAuthor (Necessary and Sufficient)"/><Type name\="hasAuthor (Necessary)"/><Type name\="hasCatalog (Necessary and Sufficient)"/><Type name\="hasCatalog (Necessary)"/><Type name\="hasCategory (Necessary and Sufficient)"/><Type name\="hasCategory (Necessary)"/><Type name\="hasDesvantagens (Necessary and Sufficient)"/><Type name\="hasDesvantagens (Necessary)"/><Type name\="hasDomain (Necessary and Sufficient)"/><Type name\="hasDomain (Necessary)"/><Type name\="hasExample (Necessary and Sufficient)"/><Type name\="hasExample (Necessary)"/><Type name\="hasRefactoring (Necessary and Sufficient)"/><Type name\="hasRefactoring (Necessary)"/><Type name\="hasReverse (Necessary and Sufficient)"/><Type name\="hasReverse (Necessary)"/><Type name\="hasWork (Necessary and Sufficient)"/><Type name\="hasWork (Necessary)"/><Type name\="isAuthorOf (Necessary and Sufficient)"/><Type name\="isAuthorOf (Necessary)"/><Type name\="isExampleOf (Necessary and Sufficient)"/><Type name\="isExampleOf (Necessary)"/><Type name\="useOtherRefactorings (Necessary and Sufficient)"/><Type name\="useOtherRefactorings (Necessary)"/></Group><Group compositeColor\="-16776961" compositeEnabled\="false" name\="Class-Instance Hierarchy"><Type name\="has instance"/><Type name\="has subclass"/></Group><Group compositeColor\="-16776961" compositeEnabled\="false" name\="Properties On Individuals"><Type name\="createBy"/><Type name\="hasAdvantage"/><Type name\="hasAuthor"/><Type name\="hasCatalog"/><Type name\="hasCategory"/><Type name\="hasDesvantagens"/><Type name\="hasDomain"/><Type name\="hasExample"/><Type name\="hasRefactoring"/><Type name\="hasReverse"/><Type name\="hasWork"/><Type name\="isAuthorOf"/><Type name\="isExampleOf"/><Type name\="useOtherRefactorings"/></Group><Group compositeColor\="-16776961" compositeEnabled\="false" name\="Domain&gt;Range"><Type name\="createBy (Domain&gt;Range)"/><Type name\="hasAdvantage (Domain&gt;Range)"/><Type name\="hasAuthor (Domain&gt;Range)"/><Type name\="hasCatalog (Domain&gt;Range)"/><Type name\="hasCategory (Domain&gt;Range)"/><Type name\="hasDesvantagens (Domain&gt;Range)"/><Type name\="hasDomain (Domain&gt;Range)"/><Type name\="hasExample (Domain&gt;Range)"/><Type name\="hasRefactoring (Domain&gt;Range)"/><Type name\="hasReverse (Domain&gt;Range)"/><Type name\="hasWork (Domain&gt;Range)"/><Type name\="isAuthorOf (Domain&gt;Range)"/><Type name\="isExampleOf (Domain&gt;Range)"/><Type name\="useOtherRefactorings (Domain&gt;Range)"/></Group></Groups>
Quick\ Search\ Visible=false
